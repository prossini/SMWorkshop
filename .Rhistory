leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 20)
tweets_with_hashtags %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
# top5
x <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 20)
ggplot(x, aes(x = hashtags, fill = screen_name)) +
geom_bar()
ggplot(x, aes(x = hashtags, fill = screen_name)) +
geom_bar() + coord_flip()
View(x)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(dplyr)
library(rtweet)
patricia <- 5+5
patricia <- 5
names(leaders_2021)
leaders_2021$is_retweet
View(leaders_2021)
freq(leaders_2021$retweet_location)
leaders_2021$retweet_location[leaders_2021$retweet_location == "Manchester, UK"] <- "Manchester"
freq(leaders_2021$retweet_location)
leaders_2021$Party <- 0
leaders_2021$Party[leaders_2021$screen_name == "BorisJohnson"] <- "Tory"
freq(leaders_2021$Party)
leaders_2021$Party[leaders_2021$screen_name == "Keir_Starmer"] <- "Labour"
freq(leaders_2021$Party)
leaders_2021$Party <- 0
freq(leaders_2021$Party)
leaders_2021$Party <- ifelse(leaders_2021$screen_name == "BorisJohnson", "Tory", "Labour")
freq(leaders_2021$Party)
ifelse(leaders_2021$screen_name == "BorisJohnson", "Tory", "Labour")
leaders_2021$Party <- ifelse(leaders_2021$screen_name == "BorisJohnson", "Tory", "Labour")
freq(leaders_2021$Party)
leaders_2021$popular_tweets[leaders_2021$favorite_count > 500] <- 'popular'
leaders_2021$popular_tweets[leaders_2021$favorite_count <= 500] <- 'less popular'
leaders_2021$popular_tweets <- 0
leaders_2021$popular_tweets[leaders_2021$favorite_count > 500] <- 'popular'
leaders_2021$popular_tweets[leaders_2021$favorite_count <= 500] <- 'less popular'
freq(leaders_2021$popular_tweets)
leaders_2021$popular_tweets <- NA
View(leaders_2021)
leaders_2021$popular_tweets <-  "viral"
leaders_2021$popular_tweets[leaders_2021$favorite_count > 500 & < 1000] <- 'popular'
leaders_2021$popular_tweets[leaders_2021$favorite_count > 500 & leaders_2021$favorite_count < 1000] <- 'popular'
leaders_2021$popular_tweets[leaders_2021$favorite_count <= 500] <- 'less popular'
freq(leaders_2021$popular_tweets)
leaders_2021$Party <- "Labour"
leaders_2021$Party[leaders_2021$screen_name == "BorisJohnson"] <- "Tory"
freq(leaders_2021$Party)
unpopular <- subset(leaders_2021, popular_tweets == "less popular")
unpopular <- subset(leaders_2021, popular_tweets != "less popular")
unpopular <- subset(leaders_2021, favorite_count <= 500)
hashtag <- subset(leaders_2021, hashtags != NA)
hashtag <- subset(leaders_2021, !is.na(hashtags))
View(hashtag)
covid <- subset(leaders_2021, hashtags == "GetBoosted")
View(covid)
View(covid)
leaders %>%
filter(date >= "2021-01-01") %>%
group_by(screen_name) %>%
rtweet::ts_plot("week", trim = 2L) +
theme_classic() +
scale_x_datetime(date_labels = "%b %d", breaks = "2 week") +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
scale_color_brewer(type = "qual", palette = 6, direction = -1) +
labs(x = "Weeks in 2021", y = "Number of Tweets per Week",title = 'Boris Johnson and Keir Starmer Tweet Activity 2021', caption = "Tweets collected using the Twitter API and rtweet") + scale_y_continuous(n.breaks = 10)
hashtag <- subset(leaders_2021, !is.na(hashtags))
hashtag <- filter(leaders_2021, !is.na(hashtags))
hashtag <- subset(leaders_2021, !is.na(hashtags))
hashtag1 <- filter(leaders_2021, !is.na(hashtags))
hashtag2 <- leaders_2021 %>% filter(!is.na(hashtags))
leaders_2021 %>% filter(!is.na(hashtags)) %>%
group_by(screen_name) %>%
count()
leaders_hash %>%
unnest(c(hashtags)) %>%
count(hashtags)
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(tidyverse)
library(lubridate)
library(dplyr)
load("leaders270622.RData")
leaders_hash <- select(leaders_2021, screen_name, hashtags)
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
# top5
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 20)
# top10
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 10)
leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
ggplot(x, aes(x = hashtags, fill = screen_name)) +
geom_bar() + coord_flip() +
ggplot(x, aes(x = hashtags, fill = screen_name)) +
geom_bar() + coord_flip()
# top5
x <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 10)
ggplot(x, aes(x = hashtags, fill = screen_name)) +
geom_bar() + coord_flip()
View(x)
ggplot(x, aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar() + coord_flip()
ggplot(x, aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip()
x %>% arrange(-n) %>%
ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip()
x %>% arrange(-n) %>%
ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip()
x %>% arrange(-n) %>%
ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip() + facet_grid( . ~ screen_name)
x %>%
ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip() + facet_grid( . ~ screen_name)
x %>% arrange(-n) %>%
ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip() + facet_grid( . ~ screen_name)
leaders_2021 %>%
ggplot(aes(x=is_retweet, fill = screen_name)) +
geom_bar(position = "dodge")
leaders_2021 %>%
ggplot(aes(x=is_retweet, fill = screen_name)) +
geom_bar(position = "stack")
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "stack")
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "dodge")
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "stack")
leaders_2021 %>%
ggplot(aes(x=is_retweet, fill = screen_name)) +
geom_bar(position = "dodge") +
labs(title = "Original Tweets and Retweets", caption = "Tweets from 01/01/2021 - 31/12/2021", x = "Is Retweet?", y = "N", fill = "Account") + theme_minimal()
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "stack") +
labs(title = "Original Tweets and Retweets", caption = "Tweets from 01/01/2021 - 31/12/2021", x = "Is Retweet?", y = "N", fill = "Account") + theme_minimal()
leaders_2021 %>%
group_by(screen_name, is_retweet) %>% # we are using this to make sure the data is grouped to calculate proportions
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n))
leaders_2021 %>%
group_by(screen_name, is_retweet) %>% # we are using this to make sure the data is grouped to calculate proportions
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n))
percentages <- leaders_2021 %>%
group_by(screen_name, is_retweet) %>% # we are using this to make sure the data is grouped to calculate proportions
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n))
View(percentages)
View(x)
View(percentages)
ggplot(percentages, aes(x = screen_name, y = perc, fill = is_retweet)) +
geom_bar(stat = "identity")
ggplot(percentages, aes(x = screen_name, y = perc, fill = is_retweet)) +
geom_bar(stat = "identity", position = dodge)
ggplot(percentages, aes(x = screen_name, y = perc, fill = is_retweet)) +
geom_bar(stat = "identity", position = 'dodge')
leaders_hash <- select(leaders_2021, screen_name, hashtags)
leaders_hash <- select(leaders_2021, screen_name, hashtags, favorite_count)
leaders_hash <- select(leaders_2021, -screen_name, -hashtags, -favorite_count)
leaders_hash <- select(leaders_2021, screen_name, hashtags, favorite_count)
View(leaders_hash)
leaders_hash <- select(leaders_2021, screen_name, hashtags, favorite_count, retweet_count)
View(percentages)
View(leaders_hash)
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(x)
View(percentages)
View(leaders_hash)
View(hash)
hash <- leaders_hash %>%
#  group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 10)
# top10
top10 <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 10)
View(top10)
top10 %>% filter(hashtags == "PMQs")
top10 %>% filter(hashtags == "PMQs")
leaders_hash %>% filter(hashtags == "PMQs")
hash %>% filter(hashtags == "PMQs")
hash$hashtags <- tolower(hash$hashtags)
View(hash)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags))
hash$hashtags <- tolower(hash$hashtags)
View(hash)
leaders_hash$hashtags <- tolower(leaders_hash$hashtags)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
leaders_hash <- select(leaders_2021, screen_name, hashtags, favorite_count, retweet_count)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags)
View(hash)
hash$hashtags <- tolower(hash$hashtags)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) #%>%
#
View(hash)
hash <- hash %>%
group_by(screen_name) %>%
count(hashtags)
View(hash)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) #%>%
#count(hashtags)
hash$hashtags <- tolower(hash$hashtags)
hash <- hash %>%
group_by(screen_name) %>%
count(hashtags)
View(hash)
View(hash)
hash %>% filter(hashtags, starts_with('g7'))
hash %>% filter(hashtags == starts_with('g7'))
hash %>% select(hashtags == starts_with('g7'))
View(hash)
hash %>% select(hashtags, starts_with('g7'))
hash %>% select(startsWith(hashtags, 'g7'))
hash %>% select(hashtags, startsWith('g7'))
hash %>% select(hashtags, startsWith(., 'g7'))
select(hash, startsWith(x = hashtags, 'g7'))
select(hash, startsWith(x = hash$hashtags, 'g7'))
select(hash, starts_with('g7', vars = hashtags))
# top10
top10 <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
count(hashtags) %>%
filter(!is.na(hashtags)) %>%  # get rid of the blank value
slice_max(order_by = n, n = 10)
View(top10)
View(top10)
top10 %>% ggplot(x = hashtags, y = n, fill = screen_name) %>%
geom_bar(stat = "identity")
top10 %>% ggplot(x = hashtags, y = n, fill = screen_name) +
geom_bar(stat = "identity")
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity")
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip()
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip() + facet_grid(. ~ screen_name )
leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
View(hash)
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip() + facet_grid(. ~ screen_name )
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity") + coord_flip()
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip() #+ facet_grid(. ~ screen_name )
leaders_2021 %>% group_by(screen_name) %>%
summarise_at(vars(c('retweet_count', 'favorite_count')), .funs = c(avg = mean, std_dev = sd), na.rm=TRUE)
leaders_2021 %>%
group_by(screen_name, is_retweet) %>%
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x= is_retweet, fill = screen_name, y = perc)) +
geom_bar(position = "dodge",stat = "identity") + #we changed stat to identity because we
theme_minimal() +
labs(title = "Proportion of original Tweets and Retweets", caption = "Tweets from 01/01/2021 - 31/12/2021", x = "Is Retweet?", y = "%", fill = "Account") + theme_minimal() +
ylim(c(0, 100)) # this determines the limits of the y axis.
## ----percentage plot, message=FALSE----------------------------------------------------------------------------------------------------------------------------
leaders_2021 %>%
group_by(screen_name, is_retweet) %>%
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x= is_retweet, fill = screen_name, y = perc)) +
geom_bar(position = "stack",stat = "identity") + #we changed stat to identity because we
theme_minimal() +
labs(title = "Proportion of original Tweets and Retweets", caption = "Tweets from 01/01/2021 - 31/12/2021", x = "Is Retweet?", y = "%", fill = "Account") + theme_minimal() +
ylim(c(0, 100)) # this determines the limits of the y axis.
## ----percentage plot, message=FALSE----------------------------------------------------------------------------------------------------------------------------
leaders_2021 %>%
group_by(screen_name, is_retweet) %>%
summarize(n = n()) %>%
mutate(perc = 100*n/sum(n)) %>%
ggplot(aes(x= is_retweet, fill = screen_name, y = perc)) +
geom_bar(position = "dodge",stat = "identity") + #we changed stat to identity because we
theme_minimal() +
labs(title = "Proportion of original Tweets and Retweets", caption = "Tweets from 01/01/2021 - 31/12/2021", x = "Is Retweet?", y = "%", fill = "Account") + theme_minimal() +
ylim(c(0, 100)) # this determines the limits of the y axis.
--------------------------------------------------------------------------------
# basic plot of retweet vs tweets
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "stack")
leaders_2021 %>%
ggplot(aes(x=screen_name, fill = is_retweet)) +
geom_bar(position = "stack")
leaders_hash <- select(leaders_2021, screen_name, hashtags, favorite_count, retweet_count)
hash <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) #%>%
View(hash)
hash$hashtags <- tolower(hash$hashtags)
hash <- hash %>%
group_by(screen_name) %>%
count(hashtags)
View(hash)
hash %>% filter(grepl('g7', hashtags))
x <- hash %>% filter(grepl('g7', hashtags))
View(x)
x <- hash %>% filter(grepl('build', hashtags))
View(x)
leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
leaders_2021 %>%
group_by(screen_name) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
# likes per hashtag
likes <- leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
View(likes)
likes <- leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count))
View(likes)
likes <- leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
View(likes)
# likes per hashtag
likes <- leaders_2021 %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags,screen_name) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
View(likes)
likes <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags,screen_name) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
likes <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags, screen_name) %>%
summarise(total_likes = sum(favorite_count)) %>%
ungroup()
View(likes)
RT <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags, screen_name) %>%
summarise(total_likes = sum(retweet_count)) %>%
ungroup()
View(RT)
RT <- leaders_hash %>%
group_by(screen_name) %>%
unnest(c(hashtags)) %>%
group_by(hashtags, screen_name) %>%
summarise(total_rts = sum(retweet_count)) %>%
ungroup()
View(RT)
View(leaders_hash)
y <- leaders %>% filter(grepl("brexit", text))
View(y)
y <- leaders %>% filter(grepl("covid", text))
View(y)
View(hash)
x <- hash %>% filter(grepl('black', hashtags))
View(x)
x <- hash %>% filter(grepl('green', hashtags))
View(x)
x <- hash %>% filter(grepl('covid', hashtags))
View(x)
View(leaders_2021)
leaders_2021$text <- tolower(leaders_2021$text)
View(leaders_2021)
y <- leaders %>% filter(grepl("borders", text))
View(y)
y <- leaders_2021 %>% filter(grepl("borders", text))
View(y)
y <- leaders_2021 %>% filter(grepl("london", text))
View(y)
freq(y$screen_name)
top10 %>% ggplot(aes(x = hashtags, y = n, fill = screen_name)) +
geom_bar(stat = "identity", position = "dodge") + coord_flip() + facet_grid(. ~ screen_name )
